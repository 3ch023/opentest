package com.ua.kture.opentest.dao;

import com.ua.kture.opentest.domain.Test;
import org.apache.log4j.Logger;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by Маша on 02.03.14.
 */
@Repository
public class TestDao {
    Logger logger = Logger.getLogger("TestDao");
    @Autowired
    private SessionFactory sessionFactory;

    public Test save(Test test) {
        Session session = sessionFactory.getCurrentSession();
        Transaction transaction = session.beginTransaction();

        Long id = (Long) session.save(test);

        transaction.commit();
        test.setId(id);
        return test;
    };

    public void update(Test test) {
        Session session = sessionFactory.getCurrentSession();
        Transaction transaction = session.beginTransaction();

        session.update(test);

        transaction.commit();
    };

    public Test delete(Long testId) {
        Test test = (Test) this.sessionFactory.getCurrentSession().load(Test.class, testId);
        if(test != null) {
            this.sessionFactory.getCurrentSession().delete(test);
        }
        return test;
    };

    public Test getTestById(Long testId) {
        Session session = sessionFactory.getCurrentSession();
        Transaction transaction = session.beginTransaction();
        Test test = (Test) session.get(Test.class, testId);
        transaction.commit();
        return test;
    }

    public List<Test> getAllTests() {
        Session session = sessionFactory.getCurrentSession();
        Transaction transaction = session.beginTransaction();
        List list =  session.createQuery("select t.id as id, t.name as name from Test t").list();

        Object obj = list.get(0);
        transaction.commit();
        return list;
    }

    public void setSessionFactory(SessionFactory sessionFactory) {
        this.sessionFactory = sessionFactory;
    }

    public List<Test> getTestsByUser(long userId) {
        List<Test> tests = new ArrayList<Test>();
        Session session = sessionFactory.getCurrentSession();
        Transaction transaction = session.beginTransaction();

        Query query = session.createQuery("select t.id, t.name, t.subject, t.description, t.rules, t.date FROM Test t, Permission p, User u " +
                                            "WHERE t.id = p.testId  AND p.userId = u.id  AND u.id = :userId ");
        query.setParameter("userId", userId);

        List list = query.list();
        for(Object o : list) {
            tests.add(testMapper(o));
        }

        transaction.commit();
        return tests;
    }
    
    private Test testMapper (Object obj) {
        Test test = new Test();
        Object[] array = (Object[]) obj;
        
        test.setId((Long) array[0]);
        test.setName((String) array[1]);
        test.setSubject((String) array[2]);
        test.setDescription((String) array[3]);
        test.setRules((String) array[4]);
        test.setDate((String) array[5]);
        return test;
    }
}
