package com.ua.kture.opentest.web;

import com.ua.kture.opentest.Util;
import com.ua.kture.opentest.domain.Answer;
import com.ua.kture.opentest.domain.Question;
import com.ua.kture.opentest.domain.User;
import com.ua.kture.opentest.service.AnswerService;
import com.ua.kture.opentest.service.QuestionService;
import org.hibernate.Session;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;

/**
 * Created by Маша on 31.05.14.
 */
@Controller
public class PassTestController {

    @Autowired
    private QuestionService questionService;
    @Autowired
    private AnswerService answerService;

    @RequestMapping(value = "/pass_test", method = RequestMethod.GET)
    public ModelAndView pass(HttpServletRequest request) {
        String idParam = (String) request.getParameter("testId");

        Long testId = Long.parseLong(idParam);
        //load all questions into map <pageNum, questionId>
        //List<Long> questionIds = questionService.getQuestionIds(testId);

        List<Long> questionIds = new ArrayList<Long>();
        questionIds.add(57l);
        questionIds.add(58l);
        questionIds.add(59l);
        questionIds.add(60l);
        questionIds.add(61l);
        questionIds.add(62l);


        HttpSession session = request.getSession();
        session.setAttribute("questionIds", questionIds);

        session.setAttribute("curPage", 0);
        ModelAndView modelAndView = new ModelAndView();
        modelAndView.setViewName("student/pass-test");

        return modelAndView;
    }

    @RequestMapping(value = "/load_question", method = RequestMethod.GET)
    public ModelAndView loadQuestion (HttpServletRequest request) {

        HttpSession session = request.getSession();
        List<Long> questionIds = (List<Long>) session.getAttribute("questionIds");

        Integer pageNum = (Integer) session.getAttribute("curPage");
        pageNum++;
        Long questionId = questionIds.get(pageNum-1);
        System.out.println();
        //load question info
        Question question = questionService.getQuestionById(questionId);
        System.out.println( " question  " + question.toString());
        List<Answer> answers = answerService.getAnswers(questionId);

        System.out.println();
        System.out.println();
        System.out.println();
        System.out.println("PGE: " + pageNum);

        session.setAttribute("curPage", pageNum);

        Integer newPageNum = (Integer) session.getAttribute("curPage");
        System.out.println();
        System.out.println("NEW PGE: " + newPageNum);

        ModelAndView modelAndView = new ModelAndView();

        modelAndView.addObject("question", question);
        modelAndView.addObject("answers", answers);
        modelAndView.setViewName("student/load-question");

        return modelAndView;
    }

    @RequestMapping(value = "/save_answer", method = RequestMethod.POST)
    public ModelAndView saveAnswer (HttpServletRequest request) {
        String idParam = (String) request.getAttribute("testId");

        Long testId = Long.parseLong(idParam);
        //load all questions
        ModelAndView modelAndView = new ModelAndView();

        return modelAndView;
    }

    @RequestMapping(value = "/test_finished", method = RequestMethod.GET)
    public ModelAndView testFinished (HttpServletRequest request) {
        HttpSession session = request.getSession();

        session.setAttribute("test_finished", true);

        ModelAndView modelAndView = new ModelAndView();
        modelAndView.setViewName("profile");
        return modelAndView;
    }
}
