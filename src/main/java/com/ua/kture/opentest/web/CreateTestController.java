package com.ua.kture.opentest.web;

import com.ua.kture.opentest.domain.Question;
import com.ua.kture.opentest.domain.Test;
import com.ua.kture.opentest.domain.User;
import com.ua.kture.opentest.exceptions.UserException;
import com.ua.kture.opentest.service.QuestionService;
import com.ua.kture.opentest.service.TestService;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import java.util.Date;

/**
 * Created by Mariia_Lukianets on 29.05.14.
 */
@Controller
public class CreateTestController {
    Logger logger = Logger.getLogger("TestController");
    @Autowired
    private TestService testService;
    @Autowired
    private QuestionService questionService;

    @RequestMapping(value = "/create_test", method = RequestMethod.GET)
    public ModelAndView showCreateTest() {
        ModelAndView modelAndView = new ModelAndView();

        Test test = new Test();
        test.setName("name");
        test = testService.save(test);

        modelAndView.addObject("testId", test.getId());
        modelAndView.setViewName("teacher/create-test");

        return modelAndView;
    }

    @RequestMapping(value = "/create_question", method = RequestMethod.GET)
    public ModelAndView showCreateQuestion() {
        ModelAndView modelAndView = new ModelAndView();

        Question question = new Question();
        question.setText("text");
        //TODO: get test id from session or ajax
        question.setTestId(22l);
        question = questionService.add(question);

        modelAndView.addObject("questionId", question.getId());
        modelAndView.setViewName("teacher/create-question");

        return modelAndView;
    }

    @RequestMapping(value = "/create_answer", method = RequestMethod.GET)
    public String showCreateAnswer() {
        return "teacher/create-answer";
    }

    @RequestMapping(value = "/ct_step_one", method = RequestMethod.GET)
    public String showStepOne() {
        return "teacher/step-one";
    }

    @RequestMapping(value = "/ct_step_two", method = RequestMethod.GET)
    public String showStepTwo() {
        return "teacher/step-two";
    }

    @RequestMapping(value = "/ct_step_three", method = RequestMethod.GET)
    public String showStepThree() {
        return "teacher/step-three";
    }

    //POST

    @RequestMapping(value = "/save_test_info", method = RequestMethod.POST)
    public String processCreateTest(HttpServletRequest request) {
        String id = request.getParameter("testId");
        String name = request.getParameter("name");
        String subject = request.getParameter("subject");
        String description = request.getParameter("description");
        String rules = request.getParameter("rules");
        Date date = new Date();

        Long testId = Long.parseLong(id);

        Test test = testService.getTestById(testId);
        test.setName(name);
        test.setSubject(subject);
        test.setDescription(description);
        test.setRules(rules);
        test.setDate(date.toString());

        testService.update(test);

        test = testService.getTestById(testId);
        System.out.print("Updated test: " + test.toString());
        //TODO: return values
        return "ct_step_one";
    }

    @RequestMapping(value = "/save_question", method = RequestMethod.POST)
    public String processSaveQuestion (HttpServletRequest request) {
        String description = request.getParameter("description");
        System.out.print("!!! " + description);

        return "redirect:/" + description;

    }

}
