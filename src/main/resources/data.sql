INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) 
		VALUES ('32', 'Какие из перечисленных паттернов относятся к категории GoF?', '22');
UPDATE `opentest`.`test` SET `name`='Нотация и семантика языка UML', `subject`='UML', `description`='Предметом курса является описание нотации языка UML версии 1.5 и особенностей процесса объектно-ориентированного анализа, проектирования и разработки программных приложений. Представлены определения базовых конструкций языка UML и нотация графических элементов, используемых при построении моделей программных систем и бизнес-процессов. Последовательно рассматриваются все типы канонических диаграмм языка UML и практические рекомендации по их построению. Применение рассматриваемых конструкций языка UML иллюстрируется практическими примерами диаграмм моделей.', `date`='Fri May 30 18:45:53 EEST 2014' WHERE `id`='22';

INSERT INTO `opentest`.`answer` (`id`, `text`, `question_id`) VALUES ('3', 'интерпретатор', '32');
INSERT INTO `opentest`.`answer` (`id`, `text`, `question_id`) VALUES ('4', 'принтер', '32');
INSERT INTO `opentest`.`answer` (`id`, `text`, `question_id`) VALUES ('5', 'фасад', '32');
INSERT INTO `opentest`.`answer` (`id`, `text`, `question_id`) VALUES ('6', 'интерфейс', '32');
INSERT INTO `opentest`.`answer` (`id`, `text`, `question_id`) VALUES ('7', 'адаптер', '32');
UPDATE `opentest`.`answer` SET `is_correct`=0 WHERE `id`='3';
UPDATE `opentest`.`answer` SET `is_correct`=0 WHERE `id`='4';
UPDATE `opentest`.`answer` SET `is_correct`=1 WHERE `id`='5';
UPDATE `opentest`.`answer` SET `is_correct`=1 WHERE `id`='7';


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) 
		VALUES ('33', 'Укажите правильные записи кратности (multiplicity) конца ассоциации на диаграмме классов?', '22');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('8', '1..10', 1, '33');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('9', '3..*', 1, '33');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('10', '1// 4', 0, '33');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('11', '2..N', 0, '33');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) 
		VALUES ('34', 'Какое из высказываний правильно?', '22');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('12', 'язык UML  предназначен для генерации программного кода на основе моделей нотаций ERD, IDEF0, DFD', 0, '34');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('13', 'язык UML  предназначен для унификации нотаций ООАП', 0, '34');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('14', 'язык UML  предназначен для объединения нотаций ERD, IDEF0, DFD', 1, '34');
		

INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) 
		VALUES ('35', 'Кто из указанных лиц принимал непосредственное участие в разработке первых версий языка UML?', '22');
		
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('15', 'Гради Буч', 1, '35');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('16', 'Эдвард Йордон', 0, '35');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('17', 'Деннис Ритчи', 0, '35');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('18', 'Никлаус Вирт', 0, '35');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) 
		VALUES ('36', 'Кто из указанных лиц принимал непосредственное участие в разработке первых версий языка UML?', '22');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('19', 'Билл Гейтс', 0, '36');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('20', 'Мартин Фаулер', 1, '36');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('21', 'Джон фон Нейман', 0, '36');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('22', 'Джеймс Румбах', 0, '36');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) 
		VALUES ('37', 'Допускается ли на диаграмме состояний изображение нескольких переходов, выходящих из начального состояния?', '22');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('23', 'Нет', 0, '37');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('24', 'Да', 0, '37');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('25', 'Да, но с дополнительными сторожевыми условиями', 1, '37');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) 
		VALUES ('38', 'Какое определение исторического состояния (history state) правильно?', '22');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('26', 'вложенное состояние состояния-композита, в котором объект может находиться бесконечно долго', 0, '38');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('27', 'псевдосостояние, используемое для запоминания того из последовательных подсостояний, которое было текущим в момент выхода из составного состояния', 1, '38');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('28', 'состояние с дополнительным стереотипом', 0, '38');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) 
		VALUES ('39', 'Какое определение шаблона сценария правильно в контексте языка UML?', '22');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('29', 'специальное изображение варианта использования на диаграмме вариантов использования', 0, '39');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('30', 'логическое условие, которому должна удовлетворять проектируемая программная система', 1, '39');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('31', 'неформальные рекомендации по структуризации текста сценария варианта использования', 0, '39');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) 
		VALUES ('40', 'Какое высказывание относительно ду-деятельности (do activity) правильно?', '22');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('32', 'ду-деятельность выполняется в момент входа в данное состояние', 0, '40');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('33', 'ду-деятельность выполняется в момент выхода из данного состояния', 1, '40');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('34', 'ду-деятельность выполняется при нахождении моделируемого объекта в некотором состоянии', 1, '40');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) 
		VALUES ('41', 'Какие категории требований входят в классификацию требований модели FURPS+?', '22');


INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('35', 'Согласованности диаграммы компонентов', 1, '41');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('36', 'Исключения конфликтов', 1, '41');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('37', 'Реализации интерфейсов', 1, '41');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('38', 'Возможности сопровождения', 1, '41');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('39', 'Функциональные', 0, '41');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) 
		VALUES ('42', 'Выберите правильное окончание следующей фразы: \"Типичный ход событий...\"', '22');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('40', '\"...всегда выполняется системой в фоновом режиме\"', 1, '42');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('41', '\"...приводит к успешному выполнению варианта использования\"', 0, '42');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('42', '\"...выполняется без взаимодействия системы с актером\"', 0, '42');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('43', 'Каким образом изображаются сценарии на диаграмме вариантов использования?', '22');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('43', 'в форме примечаний', 0, '43');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('44', 'в форме дополнительных текстовых документов', 1, '43');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('45', 'в форме ассоциаций со стериотипом', 0, '43');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('46', 'в форме базовых вариантов использования', 1, '43');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('44', 'Какие высказывания относительно нересурсоемкого узла (устройства) верны?', '22');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('47', 'узел на диаграмме развертывания со стереотипом <<', 1, '44');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('48', 'физическая часть системы, которая не требует повышенного расхода электрической энергии для своего функционирования', 0, '44');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('49', 'узел, который не содержит процессора и памяти', 0, '44');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('45', 'Укажите правильные записи сторожевых условий на диаграмме последовательности?', '22');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('50', '{condition=true}', 1, '45');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('51', '[balance>$10]', 1, '45');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('52', '(x>=0)', 1, '45');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('53', 'condition not true', 0, '45');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('46', 'Каким образом специфицируется ветвление на диаграмме последовательности?', '22');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('54', 'с помощью сторожевых условий', 0, '46');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('55', 'с помощью стереотипов', 1, '46');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('56', 'с помощью дополнительных сообщений', 0, '46');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('57', 'с помощью ограничений', 0, '46');



-- test 2

INSERT INTO `opentest`.`test` (`id`, `name`, `subject`, `description`, `date`) VALUES ('23', 'Реляционные БД', 'Введение в базы данных', 'В курсе излагаются основные понятия и методы организации реляционных баз данных и манипулирования ими, а также описываются базовые подходы к проектированию реляционных баз данных. Вводится понятие реляционной модели данных, обсуждаются структурная, манипуляционная и целостная составляющие модели. Обсуждаются важные аспекты теории баз данных, связанные с функциональными зависимостями. Описываются процесс проектирования реляционных баз данных на основе принципов нормализации, а также подходы к проектированию реляционных баз данных с использованием диаграммных семантических моделей данных.', 'Fri May 20 18:45:53 EEST 2014');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('47', 'Пусть имеется переменная отношения УПРАВЛЯЮЩИЕ_ГОСТИНИЦЫ_КОМПАНИИ {УПР_НОМ, ГОСТ_НОМ, КОМП_НОМ}, для которой поддерживается MVD КОМП_НОМ →​→​ УПР_НОМ | ГОСТ_НОМ. Какая из следующих декомпозиций приведет к 4NF?', '23');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('58', 'INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES (\'47\', \'Пусть имеется переменная отношения УПРАВЛЯЮЩИЕ_ГОСТИНИЦЫ_КОМПАНИИ {УПР_НОМ, ГОСТ_НОМ, КОМП_НОМ}, для которой поддерживается MVD КОМП_НОМ →​→​ УПР_НОМ | ГОСТ_НОМ. Какая из следующих декомпозиций приведет к 4NF?\', \'23\');\n', 0, '47');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('59', 'INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES (\'47\', \'Пусть имеется переменная отношения УПРАВЛЯЮЩИЕ_ГОСТИНИЦЫ_КОМПАНИИ {УПР_НОМ, ГОСТ_НОМ, КОМП_НОМ}, для которой поддерживается MVD КОМП_НОМ →​→​ УПР_НОМ | ГОСТ_НОМ. Какая из следующих декомпозиций приведет к 4NF?\', \'23\');\n', 0, '47');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('60', 'INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES (\'47\', \'Пусть имеется переменная отношения УПРАВЛЯЮЩИЕ_ГОСТИНИЦЫ_КОМПАНИИ {УПР_НОМ, ГОСТ_НОМ, КОМП_НОМ}, для которой поддерживается MVD КОМП_НОМ →​→​ УПР_НОМ | ГОСТ_НОМ. Какая из следующих декомпозиций приведет к 4NF?\', \'23\');\n', 1, '47');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('48', 'Пусть для отношения r удовлетворяются условия теоремы Хита. Что можно сказать про наличие или отсутствие в r зависимости соединения?', '23');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('61', 'имеется зависимость соединения ', 0, '48');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('62', 'ничего', 1, '48');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('63', 'имеется зависимость соединения Ф', 0, '48');
UPDATE `opentest`.`answer` SET `text`='в форме ассоциаций со стериотипом' WHERE `id`='58';
UPDATE `opentest`.`answer` SET `text`='с помощью сторожевых условий' WHERE `id`='59';
UPDATE `opentest`.`answer` SET `text`='[balance>$10]' WHERE `id`='60';


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('49', 'В отношении r {A, B, C} выполняется FD A →​ B. Как в этом случае можно трактовать лемму Фейджина?', '23');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('64', 'лемма Фейджина неприменима', 1, '49');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('65', 'тогда выполняется условие', 0, '49');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('66', 'тогда не выполняется условие', 0, '49');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('50', 'Пусть между типами сущности A и B имеется связь “многие ко многим”. Во что отобразится эта связь при переходе к реляционной схеме с соответствующими таблицами A и B?', '23');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('67', 'первичный ключ одной из таблиц должен быть объявлен и внешним ключом', 0, '50');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('68', 'понадобится дополнительная таблица с двумя столбцами, содержащими значения первичных ключей таблиц ', 1, '50');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('69', 'в обеих таблицах должны появиться столбцы – внешние ключи', 0, '50');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('51', 'Предположим, что в переменной отношения СЛУЖАЩИЕ {СЛУ_НОМЕР, СЛУ_ИМЯ, СЛУ_ЗАРП, СЛУ_ОТД_НОМЕР} атрибут СЛУ_ОТД_НОМЕР объявлен возможным ключом (первичным ключом является {СЛУ_НОМЕР}). Что означает соответствующее ограничение целостности?', '23');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('70', 'в каждом отделе работает не более одного служащего', 0, '51');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('71', 'каждый служащий может работать только в одном отделе', 1, '51');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('72', 'в каждом отделе должен работать в точности один служащий', 0, '51');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('52', 'Пусть в заголовке отношения r содержатся n элементов домена T, содержащего 15 значений. При каком минимальном значении n тело отношения Br может содержать более 150 кортежей?', '23');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('73', '15', 0, '52');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('74', '3', 0, '52');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('75', '2', 1, '52');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('53', 'Какие синхронизационные действия должна предпринять файловая система для корректного выполнения операции уничтожения существующего файла?', '23');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('76', 'заблокировать файл в режиме изменения', 1, '53');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('77', 'заблокировать каталог, содержащий файл, в режиме чтения', 1, '53');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('78', 'заблокировать каталог, содержащий файл, в режиме изменения', 0, '53');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('54', 'Что такое внешняя фрагментация памяти?', '23');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('79', 'фрагментация, вызываемая внешними причинами', 0, '54');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('80', 'образование большого числа мелких свободных фрагментов памяти', 1, '54');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('81', 'образование большого числа мелких свободных фрагментов памяти', 0, '54');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('55', 'Почему операция объединения не выражается через операции пересечения и взятия разности?', '23');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('82', 'потому что она коммутативна', 0, '55');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('83', 'потому что мощность ее результата больше мощности каждого из операндов, если один из них не является пустым множеством', 1, '55');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('84', 'потому что операция пересечения сама является избыточной', 1, '55');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('56', 'Из каких аксиом Армстронга следует правило вывода декомпозиции (если A →​ BC, то A →​ B и A →​ C)?', '23');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('85', 'из аксиом пополнения и транзитивности', 1, '56');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('86', 'из аксиом рефлексивности и пополнения', 0, '56');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('87', 'из аксиом рефлексивности и транзитивности', 0, '56');



-- test 3

INSERT INTO `opentest`.`test` (`id`, `name`, `subject`, `description`) VALUES ('24', 'Программирование на Java', 'Программирование на Java', 'Курс лекций посвящен современному и мощному языку программирования Java. В его рамках дается вводное изложение принципов ООП, необходимое для разработки на Java, основы языка, библиотеки для работы с файлами, сетью, для построения оконного интерфейса пользователя (GUI) и др.');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('57', 'Какие утверждения относительно менеджера компоновки FlowLayout верны?', '24');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('88', 'располагает компоненты один за другим в линию', 1, '57');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('89', 'разделяет весь контекнер на одинаковые прямоугольные секторы', 1, '57');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('90', 'является стандартом', 0, '57');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('91', 'не меняет размер компонент', 0, '57');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('58', 'Какой метод нужно переопределить, чтобы реализовать отрисовку внешнего вида компонента?', '24');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('92', 'update', 0, '58');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('93', 'paint', 0, '58');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('94', 'show', 1, '58');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('95', 'repaint', 0, '58');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('59', 'Какие источники могут использоваться классами стандартных входных потоков java в качестве источника данных?', '24');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('96', 'массив – представляется массивом ', 0, '59');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('97', 'файл – представляется объектом класса ', 1, '59');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('98', 'строка – представляется объектом ', 0, '59');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('99', 'строка – представляется объектом  строки', 1, '59');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('100', 'таблица базы данных - представляется массивом ', 0, '59');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('60', 'Какие утверждения относительно объекта класса File верны?', '24');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('101', 'для работы с содержимым файла можно получить экземпляры ', 0, '60');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('102', 'не может указывать на каталог', 0, '60');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('103', 'для создания объекта неважно, существует ли такой файл на диске', 1, '60');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('104', 'имеет специальный метод для получения расширения файла', 1, '60');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('61', 'Какой класс соответствует классу CharArrayReader, но работает только с байтовыми данными?', '24');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('105', 'ByteInputStream', 1, '61');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('106', 'BufferedInputStream', 0, '61');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('107', 'FileInputStream', 1, '61');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('62', 'Какие из методов выбрасывают InterruptedException?', '24');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('108', 'notifyAll', 1, '62');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('109', 'waitAll', 1, '62');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('110', 'sleep', 0, '62');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('111', 'wait', 1, '62');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('112', 'yield', 0, '62');


INSERT INTO `opentest`.`question` (`id`, `text`, `test_id`) VALUES ('63', 'Если один поток начал исполнение не synchronized-блока, указав ссылку на некий объект, может ли другой поток обратиться к полю этого объекта? К методу?', '24');

INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('113', 'Да, нет', 0, '63');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('114', 'Да, да', 0, '63');
INSERT INTO `opentest`.`answer` (`id`, `text`, `is_correct`, `question_id`) VALUES ('115', 'нет, да', 1, '63');















































































































































